#!/bin/bash
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
# export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

function stopwatch(){
    local date1
    date1=$(date +%s)
    while true; do
        echo -ne "$(date -u --date @$(($(date +%s) - $date1)) +%H:%M:%S)\r"
        sleep 0.2
    done
}

# Bash Completion under sudo and man
#complete -cf sudo
#complete -cf man

# Alias definitions.

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/eza ]; then
    alias ls='eza'
    alias ll='ls -lh --git'
else
    alias ls='ls --color=auto'
    alias ll='ls -l'
fi
alias la='ls -a'

alias grep='grep --color=auto'
alias whoareyou='echo "I'\''m a freaking computer, dumbass."'

[ -x /usr/bin/bat ] && alias cat='bat'
[ -x /usr/bin/nvim ] && alias vim='nvim'

# Include this bash functions file
# Color man pages
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m' # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# Disable Pango in Firefox
export MOZ_DISABLE_PANGO=1

export EDITOR=vim

[ -f "$HOME"/.dircolors ] && eval "$(dircolors -b "$HOME"/.dircolors)"

# Spit out reminders when I open a terminal, if there is a reminders file
if [ -f "$HOME"/.reminders ] && [ -x /usr/bin/remind ]; then
    /usr/bin/remind "$HOME"/.reminders
fi

export PATH="$HOME"/bin:"$HOME"/.local/bin:"$PATH"

# rust
if [ -d "$HOME"/.cargo/bin ]; then
    export PATH="$HOME"/.cargo/bin:$PATH
    export RUST_SRC_PATH="$HOME"/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src
fi

if [ -x /usr/bin/pyenv ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
fi

[ -x /usr/bin/starship ] && eval "$(starship init bash)"

if [ -x /usr/bin/fzf ]; then
    eval "$(fzf --bash)"

    if [ -x /usr/bin/fd ]; then
        export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type=d"

        _fzf_compgen_path() {
            fd --hidden --exclude .git . "$1"
        }

        _fzf_compgen_dir() {
            fd --type=d --hidden --exclude .git . "$1"
        }
    fi

    if [ -x /usr/bin/eza ] && [ -x /usr/bin/eza ]; then
        show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"
        show_file_tree='eza --tree --color=always {} | head -200'

        export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
        export FZF_ALT_C_OPTS="--preview '$show_file_tree'"

        _fzf_comprun() {
            local command=$1
            shift

            case "$command" in
                cd|pushd|rmdir) fzf --preview "$show_file_tree"           "$@" ;;
                export|unset)   fzf --preview "eval 'echo \${}'"          "$@" ;;
                ssh|telnet)     fzf --preview 'dig {}'                    "$@" ;;
                unalias)        fzf --preview 'alias {}'                  "$@" ;;
                *)              fzf --preview "$show_file_or_dir_preview" "$@" ;;
            esac
        }
    fi

    [ -d "$HOME"/.local/share/fzf-git.sh ] && source "$HOME"/.local/share/fzf-git.sh/fzf-git.sh
fi
